"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/login/page",{

/***/ "(app-pages-browser)/./src/lib/auth.ts":
/*!*************************!*\
  !*** ./src/lib/auth.ts ***!
  \*************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   generateToken: function() { return /* binding */ generateToken; },\n/* harmony export */   getStoredToken: function() { return /* binding */ getStoredToken; },\n/* harmony export */   getUserFromToken: function() { return /* binding */ getUserFromToken; },\n/* harmony export */   loginUser: function() { return /* binding */ loginUser; },\n/* harmony export */   removeStoredToken: function() { return /* binding */ removeStoredToken; },\n/* harmony export */   signupUser: function() { return /* binding */ signupUser; },\n/* harmony export */   storeToken: function() { return /* binding */ storeToken; },\n/* harmony export */   verifyToken: function() { return /* binding */ verifyToken; }\n/* harmony export */ });\n/* harmony import */ var jsonwebtoken__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jsonwebtoken */ \"(app-pages-browser)/./node_modules/jsonwebtoken/index.js\");\n/* harmony import */ var jsonwebtoken__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jsonwebtoken__WEBPACK_IMPORTED_MODULE_0__);\n/* __next_internal_client_entry_do_not_use__ generateToken,verifyToken,loginUser,signupUser,getUserFromToken,storeToken,getStoredToken,removeStoredToken auto */ // JWT Authentication utilities\n\nconst JWT_SECRET = \"roadmapai-demo-secret\";\nconst JWT_EXPIRES_IN = \"7d\";\n// Mock user database (in real app, this would be a database)\nconst mockUsers = [\n    {\n        id: \"1\",\n        email: \"test@example.com\",\n        name: \"Test User\",\n        avatar: \"https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?w=32&h=32&fit=crop&crop=face\",\n        createdAt: new Date(\"2024-01-01\")\n    },\n    {\n        id: \"2\",\n        email: \"demo@roadmapai.com\",\n        name: \"Demo User\",\n        avatar: \"https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?w=32&h=32&fit=crop&crop=face\",\n        createdAt: new Date(\"2024-01-02\")\n    }\n];\n// Log mock users on module load\nconsole.log(\"Initial mock users:\", mockUsers);\n// Generate JWT token\nfunction generateToken(user) {\n    return jsonwebtoken__WEBPACK_IMPORTED_MODULE_0___default().sign({\n        userId: user.id,\n        email: user.email,\n        name: user.name\n    }, JWT_SECRET, {\n        expiresIn: JWT_EXPIRES_IN\n    });\n}\n// Verify JWT token\nfunction verifyToken(token) {\n    console.log(\"Verifying token:\", {\n        token,\n        type: typeof token\n    });\n    if (!token || typeof token !== \"string\") {\n        console.error(\"Invalid token format - token is not a string\");\n        return null;\n    }\n    try {\n        // Verify and decode the token\n        const decoded = jsonwebtoken__WEBPACK_IMPORTED_MODULE_0___default().verify(token, JWT_SECRET);\n        // Type guard to check if the decoded object has the required properties\n        if (!decoded || typeof decoded !== \"object\" || !(\"userId\" in decoded) || !(\"email\" in decoded)) {\n            console.error(\"Invalid token payload structure:\", decoded);\n            return null;\n        }\n        // Ensure required fields are present and of correct type\n        if (typeof decoded.userId !== \"string\" || typeof decoded.email !== \"string\") {\n            console.error(\"Invalid token field types:\", decoded);\n            return null;\n        }\n        return {\n            userId: decoded.userId,\n            email: decoded.email,\n            name: decoded.name || \"User\"\n        };\n    } catch (error) {\n        if (error instanceof Error) {\n            console.error(\"Token verification failed:\", {\n                name: error.name,\n                message: error.message,\n                stack: error.stack\n            });\n        } else {\n            console.error(\"Unknown error during token verification:\", error);\n        }\n        return null;\n    }\n}\n// Mock authentication functions\nasync function loginUser(email, password) {\n    try {\n        console.log(\"=== LOGIN ATTEMPT STARTED ===\");\n        console.log(\"Email:\", email);\n        // 1. Check if email and password are provided\n        if (!email || !password) {\n            console.log(\"Email or password missing\");\n            return null;\n        }\n        // 2. Hardcoded check for demo accounts\n        let user;\n        if (email.toLowerCase() === \"test@example.com\") {\n            user = {\n                id: \"1\",\n                email: \"test@example.com\",\n                name: \"Test User\",\n                avatar: \"https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?w=32&h=32&fit=crop&crop=face\",\n                createdAt: new Date(\"2024-01-01\")\n            };\n        } else if (email.toLowerCase() === \"demo@roadmapai.com\") {\n            user = {\n                id: \"2\",\n                email: \"demo@roadmapai.com\",\n                name: \"Demo User\",\n                avatar: \"https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?w=32&h=32&fit=crop&crop=face\",\n                createdAt: new Date(\"2024-01-02\")\n            };\n        }\n        console.log(\"User found?:\", user ? \"Yes\" : \"No\");\n        if (!user) {\n            console.log(\"No user found with email:\", email);\n            return null;\n        }\n        // 3. Generate token\n        console.log(\"Generating token for user:\", user.id);\n        const token = jsonwebtoken__WEBPACK_IMPORTED_MODULE_0___default().sign({\n            userId: user.id,\n            email: user.email,\n            name: user.name\n        }, JWT_SECRET, {\n            expiresIn: JWT_EXPIRES_IN\n        });\n        if (!token) {\n            console.error(\"Failed to generate token\");\n            return null;\n        }\n        console.log(\"Token generated successfully\");\n        console.log(\"=== LOGIN SUCCESSFUL ===\");\n        return {\n            token,\n            user\n        };\n    } catch (error) {\n        console.error(\"!!! LOGIN ERROR !!!\");\n        console.error(\"Error details:\", {\n            name: error instanceof Error ? error.name : \"Unknown\",\n            message: error instanceof Error ? error.message : String(error)\n        });\n        return null;\n    }\n}\nasync function signupUser(email, password, name) {\n    console.log(\"signupUser called with:\", {\n        email,\n        name,\n        password: password ? \"***\" : \"empty\"\n    });\n    // Validate inputs\n    if (!email || !name || !password) {\n        console.error(\"Missing required fields\");\n        throw new Error(\"All fields are required\");\n    }\n    // Simulate API delay\n    await new Promise((resolve)=>setTimeout(resolve, 1000));\n    console.log(\"Checking for existing user with email:\", email);\n    const existingUser = mockUsers.find((u)=>u.email === email);\n    if (existingUser) {\n        console.log(\"User already exists:\", existingUser.id);\n        throw new Error(\"User already exists\");\n    }\n    try {\n        // Create new user\n        const newUser = {\n            id: Date.now().toString(),\n            email,\n            name,\n            avatar: \"https://ui-avatars.com/api/?name=\".concat(encodeURIComponent(name), \"&background=random\"),\n            createdAt: new Date()\n        };\n        console.log(\"Created new user:\", newUser);\n        // Add the new user to the mock users array\n        mockUsers.push(newUser);\n        console.log(\"Added user to mock database. Total users:\", mockUsers.length);\n        console.log(\"Generating token for new user...\");\n        const token = generateToken(newUser);\n        console.log(\"Generated token:\", token ? \"\".concat(token.substring(0, 10), \"...\") : \"null\");\n        if (!token) {\n            throw new Error(\"Failed to generate token\");\n        }\n        return {\n            token,\n            user: newUser\n        };\n    } catch (error) {\n        console.error(\"Error in signupUser:\", {\n            name: error === null || error === void 0 ? void 0 : error.name,\n            message: error === null || error === void 0 ? void 0 : error.message,\n            stack: error === null || error === void 0 ? void 0 : error.stack,\n            error: error\n        });\n        throw error; // Re-throw to be handled by the caller\n    }\n}\nasync function getUserFromToken(token) {\n    console.log(\"getUserFromToken called with token:\", token ? \"\".concat(token.substring(0, 10), \"...\") : \"null\");\n    if (!token) {\n        console.log(\"No token provided\");\n        return null;\n    }\n    try {\n        console.log(\"Calling verifyToken...\");\n        const decoded = verifyToken(token);\n        console.log(\"verifyToken result:\", decoded);\n        if (!decoded || !decoded.userId) {\n            console.error(\"Invalid or missing userId in decoded token\");\n            return null;\n        }\n        console.log(\"Looking for user with ID:\", decoded.userId);\n        const user = mockUsers.find((u)=>u.id === decoded.userId);\n        console.log(\"Found user:\", user);\n        if (!user) {\n            console.error(\"User not found in mock database\");\n        }\n        return user || null;\n    } catch (error) {\n        console.error(\"Error in getUserFromToken:\", {\n            name: error === null || error === void 0 ? void 0 : error.name,\n            message: error === null || error === void 0 ? void 0 : error.message,\n            stack: error === null || error === void 0 ? void 0 : error.stack,\n            error: error\n        });\n        return null;\n    }\n}\n// Token storage helpers\nfunction storeToken(token) {\n    if (true) {\n        localStorage.setItem(\"auth_token\", token);\n    }\n}\nfunction getStoredToken() {\n    if (true) {\n        return localStorage.getItem(\"auth_token\");\n    }\n    return null;\n}\nfunction removeStoredToken() {\n    if (true) {\n        localStorage.removeItem(\"auth_token\");\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/lib/auth.ts\n"));

/***/ })

});